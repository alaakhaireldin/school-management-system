service: school-management

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-north-1
  logRetentionInDays: 5
  lambdaHashingVersion: '20201221'
  httpApi:
    cors: true
  environment: ${file(env.yml):${self:custom.stage}}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'dynamodb:*'
            - 'ec2:CreateNetworkInterface'
            - 'ec2:DescribeNetworkInterfaces'
            - 'ec2:DeleteNetworkInterface'
            - 'secretsmanager:GetSecretValue'
          Resource:
            - '*'

custom:
  stage: dev
  dynamodb:
    seed:
      domain:
        sources:
          - table: schoolTable
          - sources: [./resources/migrations/v0.json]
    stages:
      - dev
    start:
      port: 41581
      inMemory: true
      migrate: true
      sharedDb: true

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

functions:
  getSchool:
    handler: src/api/getSchoolApi.handler
    events:
      - http:
          path: school/{id}
          method: get
  postSchool:
    handler: src/api/postSchoolApi.handler
    events:
      - http:
          path: school
          method: post
  deleteSchool:
    handler: src/api/deleteSchoolApi.handler
    events:
      - http:
          path: school/{id}
          method: delete
  patchSchool:
    handler: src/api/patchSchoolApi.handler
    events:
      - http:
          path: school/{id}
          method: patch

resources:
  - ${file(./resources/dynamo.yml)}
