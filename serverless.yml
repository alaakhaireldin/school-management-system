service: school-management
frameworkVersion: '2 || 3'

tasks:
    - name: Import env
      includeEnv:
        file: env.yml
        name: EnvData
    - name: Import dynamo
      includeEnv:
        file: ./resources/dynamo.yml
        name: DynamoData
    
custom:
  tableName: EnvData.dev.SCHOOL_TABLE_NAME
provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ DynamoData.Resources.TokensTable, Arn ]
  environment:
    SCHOOL_TABLE: ${self:custom.tableName}



plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

functions:
  getSchool:
    handler: src/api/getSchoolApi.handler
    events:
      - http:
          path: school/{id}
          method: get
  postSchool:
    handler: src/api/postSchoolApi.handler
    events:
      - http:
          path: school
          method: post
  deleteSchool:
    handler: src/api/deleteSchoolApi.handler
    events:
      - http:
          path: school/{id}
          method: delete
  patchSchool:
    handler: src/api/patchSchoolApi.handler
    events:
      - http:
          path: school/{id}
          method: patch

resources:
  - ${file(./resources/dynamo.yml)}
